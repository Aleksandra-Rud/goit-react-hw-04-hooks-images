{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","services/apiService.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","reset","useState","query","setQuery","className","e","preventDefault","type","onChange","value","currentTarget","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","onOpenModal","console","log","src","webformatURL","alt","onClick","largeImageURL","ImageGallery","images","map","id","Loader","color","height","width","timeout","Button","modalRoot","document","querySelector","Modal","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","event","target","axios","defaults","baseURL","API_KEY","page","a","get","resp","data","hits","App","setPage","setImages","showModal","setShowModal","largeImage","setLargeImage","isLoading","setIsLoading","addPicture","scrollTo","top","documentElement","scrollHeight","behavior","getPictures","then","response","length","alert","catch","finally","toggleModal","dataset","img","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4609f48c.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n// import PropTypes from \"prop-types\";\r\n\r\nfunction Searchbar({ onSubmit, reset }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleChangeQuery = (e) => {\r\n    const { value } = e.currentTarget;\r\n    // setState({\r\n    //   [name]: value,\r\n    // });\r\n    setQuery(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(query);\r\n    // setQuery(\"\");\r\n\r\n    // reset();\r\n  };\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          onChange={handleChangeQuery}\r\n          value={query}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          name=\"query\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ImageGalleryItem({ image, onOpenModal }) {\r\n  console.log(image);\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={image.webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={onOpenModal}\r\n        data-img={image.largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nfunction ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          image={image}\r\n          key={image.id}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import NewLoader from \"react-loader-spinner\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <NewLoader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <>\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","// import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nfunction Modal({ onClick, children }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === \"Escape\") {\r\n        onClick();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [onClick]);\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\n\nconst API_KEY = \"23017101-47ea80d7a3291cc2e4e342e52\";\n\nexport async function getPictures(query, page) {\n  const resp = await axios.get(\n    `/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\n  );\n  return resp.data.hits;\n}\n","// import React, { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Loader from \"./components/Loader/Loader\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport { getPictures } from \"./services/apiService\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImage, setLargeImage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSearchBarSubmit = (query) => {\n    setQuery(query);\n    setPage(1);\n    setImages([]);\n  };\n\n  useEffect(() => {\n    if (query === \"\") {\n      return;\n    } else {\n      addPicture();\n    }\n\n    // getPictures(query, page);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  useEffect(() => {\n    if (page !== 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  });\n\n  const addPicture = () => {\n    setIsLoading(true);\n\n    getPictures(query, page)\n      .then((response) => {\n        if (response.length === 0) {\n          return alert(`no results for ${query}`);\n        }\n        setImages([...images, ...response]);\n        setPage(page + 1);\n      })\n      .catch(() => alert(\"Oops, here is a problem! Please try again...\"))\n      .finally(() => setIsLoading(false));\n  };\n\n  const reset = () => {\n    setImages([]);\n    setPage(1);\n    addPicture(query);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onOpenModal = (e) => {\n    e.preventDefault();\n    setLargeImage(e.target.dataset.img);\n    toggleModal();\n  };\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const prevSearchQuery = prevState.query;\n  //   const nextSearchQuery = this.state.query;\n  //   if (prevSearchQuery !== nextSearchQuery) {\n  //     this.addPicture();\n  // }\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSearchBarSubmit} reset={reset} />\n      {isLoading && <Loader />}\n      <ImageGallery images={images} onOpenModal={onOpenModal} />\n      {images.length > 0 && <Button onClick={addPicture} />}\n      {showModal && (\n        <Modal onClick={toggleModal}>\n          <img src={largeImage} alt=\"\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}